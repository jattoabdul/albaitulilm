# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-12-31 22:48
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30, verbose_name="Author's First Name")),
                ('last_name', models.CharField(max_length=40, verbose_name="Author's Last Name")),
                ('slug', models.SlugField(unique=True)),
                ('bio', models.TextField(blank=True, verbose_name="Author's Biography")),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name="Author's Email Address")),
                ('nationality', models.CharField(blank=True, max_length=50, verbose_name="Author's Nationality")),
                ('phone_no', models.CharField(blank=True, max_length=15, verbose_name="Author's Phone Number")),
                ('fb_username', models.CharField(blank=True, max_length=100, verbose_name='Facebook Username')),
                ('twitter_handle', models.CharField(blank=True, max_length=100, verbose_name='Twitter Handle')),
                ('linkedin_username', models.CharField(blank=True, max_length=100, verbose_name='Linkedin Username')),
                ('dribble_username', models.CharField(blank=True, max_length=100, verbose_name='Dribble Username')),
            ],
            options={
                'ordering': ['first_name'],
                'verbose_name_plural': 'Authors',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, unique=True, verbose_name='Book Title')),
                ('slug', models.SlugField(max_length=150, unique=True, verbose_name='Book URL')),
                ('intro', models.CharField(blank=True, max_length=250, verbose_name='Book Introductory Highlight')),
                ('description', models.TextField(blank=True, verbose_name='Book Detailed Description')),
                ('pg_number', models.IntegerField(blank=True, verbose_name='Book Page Numbers')),
                ('cover_image', models.ImageField(blank=True, upload_to='bookcoverimages/%Y/%m/%d/', verbose_name='Books Cover Image')),
                ('publication_year', models.DateField(verbose_name='Publication Year')),
                ('download_no', models.IntegerField(default=0, verbose_name='Number of Book Downloads')),
                ('isbn', models.CharField(blank=True, max_length=25, verbose_name='Book ISBN Number')),
                ('price', models.DecimalField(decimal_places=2, help_text='book price in dollars e.g $0.00', max_digits=6, verbose_name='Book Price')),
                ('upload', models.FileField(help_text='Upload the Book Here', upload_to='books/%Y/%m/%d/', verbose_name='Book File Upload')),
                ('uploaded_on', models.DateTimeField(auto_now_add=True, help_text='Day and time the book was uploaded', verbose_name='Date of Book Upload')),
                ('authors', models.ManyToManyField(to='bookstore.Author')),
            ],
            options={
                'ordering': ['-uploaded_on'],
                'verbose_name_plural': 'Books',
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='Category Title')),
                ('slug', models.SlugField(unique=True)),
                ('details', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='Category Details')),
            ],
            options={
                'ordering': ['title'],
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Language Name')),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'ordering': ['name'],
                'verbose_name_plural': 'Languages',
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name="Publisher's Company Name")),
                ('slug', models.SlugField(unique=True)),
                ('address', models.CharField(max_length=50, verbose_name="Publisher's Address")),
                ('city', models.CharField(max_length=60, verbose_name="Publisher's City")),
                ('state_province', models.CharField(max_length=30, verbose_name="Publisher's State Province")),
                ('country', models.CharField(max_length=50, verbose_name="Publisher's Country")),
                ('website', models.URLField(blank=True, verbose_name="Publisher's Website")),
            ],
            options={
                'ordering': ['name'],
                'verbose_name_plural': 'Publishers',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=75)),
                ('text', models.TextField()),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('approved_review', models.BooleanField(default=False)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='bookstore.Book')),
            ],
        ),
        migrations.AddField(
            model_name='book',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookstore.Categories'),
        ),
        migrations.AddField(
            model_name='book',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookstore.Language'),
        ),
        migrations.AddField(
            model_name='book',
            name='publisher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookstore.Publisher'),
        ),
        migrations.AddField(
            model_name='book',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='book',
            name='uploaded_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
